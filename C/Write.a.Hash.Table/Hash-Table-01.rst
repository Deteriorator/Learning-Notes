##############################################################################
C 语言实现哈希表
##############################################################################

源文件参考 ： https://github.com/jamesroutley/write-a-hash-table

本教程由 `James Routley`_ 撰写 ， 是他在 routley.io 上发表的博客 。 本人学习过程中将\
其用中文记录下来 。 

.. _`James Routley`: https://twitter.com/james_routley

哈希表_ 是最有用的数据结构之一 。 它们快速 ， 可扩展的插入 ， 搜索和删除功能使它们与\
大量计算机科学问题相关 。 

.. _哈希表: https://en.wikipedia.org/wiki/Hash_table

在本教程中 ， 我们将使用 C 语言实现一个开放地址的双散列表 。 通过学习本教程 ， 您将\
获得 ： 

- 了解基本数据结构如何在后台运行
- 深入了解何时使用哈希表 ， 何时不使用哈希表 ， 以及哈希表会如何失效
- 接触新的 C 代码

C 是一种编写哈希表的好语言 ， 因为 ： 

- 这种语言不包含任何一种
- 它是一种低级别的语言，因此你可以更深入地了解事物在机器层面的工作方式

本教程假定您对编程和 C 语法有一定的了解 。 代码本身相对简单明了 ， 大多数问题都可以\
通过网络搜索解决 。 如果您遇到其他问题 ， 请打开 GitHub Issue_ 。

.. _Issue: https://github.com/jamesroutley/write-a-hash-table/issues

完整的实现大约需要 200 行代码 ， 大约需要一两个小时才能完成 。 

**目录结构**

1. `简介`_
2. `哈希表结构`_
3. `哈希函数`_
4. `处理碰撞`_
5. `哈希表方法`_
6. `调整表格大小`_
7. `附录：替代碰撞处理`_

.. _`简介`:
.. _`哈希表结构`:
.. _`哈希函数`:
.. _`处理碰撞`:
.. _`哈希表方法`:
.. _`调整表格大小`:
.. _`附录：替代碰撞处理`:

..
    ============
    Part title..
    ============

    ***************
    Chapter title..
    ***************

    Section title..
    ===============

    Subsection title..
    ------------------

    Subsubsection title..
    ^^^^^^^^^^^^^^^^^^^^^

    Paragraph title..
    """""""""""""""""

    Paragraph title..
    *****************

.. contents::

==============================================================================
01  简介
==============================================================================
